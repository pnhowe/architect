#!/usr/bin/env python3

import os
import django

os.environ.setdefault( 'DJANGO_SETTINGS_MODULE', 'architect.settings' )
django.setup()

import logging

from architect.Plan.models import Plan
from architect.Builder.models import Action, Job

ORDER_OF_OPERATIONS = ( 'move', 'build', 'destroy', 'rebuild' )

logging.basicConfig()
logger = logging.getLogger()
logger.setLevel( logging.DEBUG )

logging.info( 'Checking Plans...' )
for plan in Plan.objects.all():
  logging.info( 'Checking plan "{0}"...'.format( plan ) )

  actions_needed = plan.max_inflight - Action.objects.filter( instance__plan=plan ).exclude( state={} ).count()

  if actions_needed <= 0:
    continue

  action_list = list( Action.objects.filter( instance__plan=plan, state={} ) )
  action_list.sort( key=lambda action: ORDER_OF_OPERATIONS.index( action.action ) )

  for action in action_list[ :actions_needed ]:
    action.start()

logging.info( 'Running Jobs...' )
for job in Job.objects.filter( state__in=( 'new', 'done' ) ):
  logging.info( 'Running job "{0}"...'.format( job ) )
  job.run()

logging.info( 'Running Actions...' )
for action in Action.objects.exclude( state={} ):
  logging.info( 'Running action "{0}"...'.format( action ) )
  action.run()

logging.info( 'Done.' )
